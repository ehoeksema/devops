sudo: required
services:
- docker
language: python
python:
- '3.6'
before_install:
- docker version
- docker info
install:
- npm install newman
- pip install -r requirements.txt
- pip install -r test-requirements.txt
- pip install nose
- pip install Flask-Testing
before_script:
- node --version
- npm --version
- node_modules/.bin/newman --version
script:
- python -m unittest discover
- docker build -t swagger-spring-example:1.0.0 .
- docker run --name example_api -d -t -p 127.0.0.1:8080:8080 swagger-spring-example:1.0.0
- docker ps
- count=0 && until $(curl --output /dev/null --silent --head --fail http://localhost:8080);
  do printf '.' && sleep 3 && count=$((count+1)) && if [ $count -gt 5 ]; then break;
  fi; done
- docker logs example_api
- node_modules/.bin/newman run tests/postman_collection.json -e tests/postman_environment.json
after_success:
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- docker tag devops/swagger_server devops/swagger_server
- docker push devops/swagger_server
env:
  global:
  - secure: UEJk3bCSsqw6daKJtX66KwgOq5sBadPhZpHbljEQPsjqanoP38UoMAg3sTBYaav127eBVwgL03ydGKIlKumRev2f0Rlh/kHW7e+Amc7HpCbYAxyYGd3rKjiqnpwKtHw7+ua7LHIwhCgV3CZE0IbPcJwXM2SsWAyBcvJX8CbxJTsKlQr5hvJUgxUQDFaU7MCeEWHwl58kyi8wbccgIopjaQL4XvbkxZhsxmAagRsik8bEY4dccdN65Y+dNESD0nZx70eGOvSsm7ufD2TaF9/jZE9WeWnLwCqRqdy/s4+xr9Y1rvx+pbW8kRfFq8ejCr00OOeV2dehv/KFxRzTfSLFopRtmaq5S66QvRpTUohlOEFH+bfFeLcSEZVsmdqfQMM47fG/fDvN+M8mtaQ41yElfYB2oxW28IEjX0OTrwJJjbbWKySnXVkHS56ZW44oQEq2OPve30Q3ARYTb5tG62ZGCwDdNQFCAgH3PLuQyOacc9WWgW2+B3KPrDIsE75V0+XtwMpF44hZrJJoZXhRtqWM70+eHWaI9jBdRqYEwqqZO7b9cD2cXAzEvRjenWS1flPO83Rxmt5fcQDmfdQLYDIcv8me6azY4KpajQtB7VXK/iTu4bJSSdvWwzJxeYEzO6/SbCRXWHZb00A9Z4UuhvqctMeYEJ/7ccDu3t/gQrxx5S8=
  - secure: dhsyzoN87ywO4nwh+IUlDFfxd6jtYDEmBrP7+06CtcNoBxXUAKcA05+p9Iu9/GJJ6NWt7LbAMWXZHJpfqWucOrCS0270ANptU7dXe+iqgu5zURp9VRnu3Y7+ZGhUZpdI/5GrFmogjITAR77bL6OiZ0HNHY3Yxn1ikTaGXFxpapDOMJgPOjfJoTClbWzpZ7DXT7Rny5U6+sKrcNiCcrtY+zg7clAuvoJifyIEW8YDTPS+URnzfmtBmwvB6SJfgDVUc1NqBvXNgNVG1IDUdg3hnkXV761ksUcEWNqe5SUsovSUf1nExYYkjX2ST4zwlBzv7yybauZAjtkuHnWzWTKRpS6sEVV1JgYfv91tfARxKntW+UTqY5hwdDzF01Us5UC5JMSxhO+Xh8HwPaZCgRROM3mMlkY40OrIYYyGRHgcqmhmwG05yJbCrDL4cSXxpneTdDjLZvxrc1dp4loO4KQGBBmFhv1Apyl1BqC4ErhqGdafs8wxCcKiRgmsbhIRohUWpAftTzorGnreqAEXDTRBK/3Ra46xJ4oPB/ojI1LT5t18JKKAqufO/EV6F6ix57uecVUDaeaKmZspz7zoE01rh0Nzcq0eN+1Q6J2JSyAnIfl8Np23VXWbT8Ng1HpSE/KtCzrU7nGZ1A1QKdHrq852gPJPXqwuKy9TnAL8QrDBafw=
